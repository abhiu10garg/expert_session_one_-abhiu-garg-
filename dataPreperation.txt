train = pd.read_csv("train.csv")
from sklearn.linear_model import LogisticRegression
train.head()


train.describe()
train.isnull().sum()

#Data Preparation
# Selecting only 2 columns for ease
train_x = train[["Pclass", "Sex"]]
train_x.head()

train_y = train[["Survived"]]
train_y.head()

# Cleaning of data
# Making Male/ Female to integer numbers calles Label Encoding
train_x["Sex"].replace("male", 1, inplace = True)
train_x["Sex"].replace("female", 0, inplace = True)
train_x.head()

# Making dataset for validation

tr_x, cv_x, tr_y, cv_y   = train_test_split(train_x, train_y, test_size = 0.30)
print(tr_x.head())
print(tr_y.head())

l= LogisticRegression()
l.fit(tr_x, tr_y)

Accuracy_LogiReg = lgr.score(cv_x, cv_y)
print("Accuracy = {}%".format(Accuracy_LogiReg * 100))












1. Gathering Data
Import important libraries and Dataset.

import numpy as np
import pandas as pd

#The Machine learning alogorithm
from sklearn.linear_model import LogisticRegression

# Test train split
from sklearn.model_selection import train_test_split
Set path to the folder where files are downloaded.

import os
os.chdir("D:\Personal\Site\Articles\Titanic") #Enter path where the files are present
train = pd.read_csv("train.csv")
train.head()
PassengerId	Survived	Pclass	Name	Sex	Age	SibSp	Parch	Ticket	Fare	Cabin	Embarked
0	1	0	3	Braund, Mr. Owen Harris	male	22.0	1	0	A/5 21171	7.2500	NaN	S
1	2	1	1	Cumings, Mrs. John Bradley (Florence Briggs Th...	female	38.0	1	0	PC 17599	71.2833	C85	C
2	3	1	3	Heikkinen, Miss. Laina	female	26.0	0	0	STON/O2. 3101282	7.9250	NaN	S
3	4	1	1	Futrelle, Mrs. Jacques Heath (Lily May Peel)	female	35.0	1	0	113803	53.1000	C123	S
4	5	0	3	Allen, Mr. William Henry	male	35.0	0	0	373450	8.0500	NaN	S
2. Data Pre-processing
Cleaning of data e.g conversion of data, missing value imputation

EDA and Feature Engineering (In next tutorial)

Train/Test split

train.describe()
PassengerId	Survived	Pclass	Age	SibSp	Parch	Fare
count	891.000000	891.000000	891.000000	714.000000	891.000000	891.000000	891.000000
mean	446.000000	0.383838	2.308642	29.699118	0.523008	0.381594	32.204208
std	257.353842	0.486592	0.836071	14.526497	1.102743	0.806057	49.693429
min	1.000000	0.000000	1.000000	0.420000	0.000000	0.000000	0.000000
25%	223.500000	0.000000	2.000000	20.125000	0.000000	0.000000	7.910400
50%	446.000000	0.000000	3.000000	28.000000	0.000000	0.000000	14.454200
75%	668.500000	1.000000	3.000000	38.000000	1.000000	0.000000	31.000000
max	891.000000	1.000000	3.000000	80.000000	8.000000	6.000000	512.329200
train.isnull().sum()
PassengerId      0
Survived         0
Pclass           0
Name             0
Sex              0
Age            177
SibSp            0
Parch            0
Ticket           0
Fare             0
Cabin          687
Embarked         2
dtype: int64
train_x = train[["Pclass", "Sex"]]
train_x.head()
Pclass	Sex
0	3	male
1	1	female
2	3	female
3	1	female
4	3	male
train_y = train[["Survived"]]
train_y.head()
Survived
0	0
1	1
2	1
3	1
4	0
train_x["Sex"].replace("male", 1, inplace = True)
train_x["Sex"].replace("female", 0, inplace = True)
train_x.head()
C:\Users\prateek.sharma\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\generic.py:6586: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  self._update_inplace(new_data)
Pclass	Sex
0	3	1
1	1	0
2	3	0
3	1	0
4	3	1
tr_x, cv_x, tr_y, cv_y   = train_test_split(train_x, train_y, test_size = 0.30)

print(tr_x.head())
print(tr_y.head())
     Pclass  Sex
452       1    1
168       1    1
742       1    0
413       2    1
392       3    1
     Survived
452         0
168         0
742         1
413         0
392         0


